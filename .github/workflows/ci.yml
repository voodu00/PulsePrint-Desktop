name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  CARGO_TERM_COLOR: always

jobs:
  frontend-checks:
    name: Frontend Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: frontend-react/yarn.lock

      - name: Install dependencies
        run: |
          cd frontend-react
          yarn install --frozen-lockfile

      - name: Run ESLint
        run: |
          cd frontend-react
          yarn eslint src --ext .ts,.tsx --max-warnings 0

      - name: Run Prettier check
        run: |
          cd frontend-react
          yarn prettier --check src

      - name: Run TypeScript compiler
        run: |
          cd frontend-react
          yarn tsc --noEmit

      - name: Run tests
        run: |
          cd frontend-react
          yarn test --coverage --watchAll=false

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./frontend-react/coverage/lcov.info
          flags: frontend
          name: frontend-coverage

  rust-checks:
    name: Rust Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Check Rust formatting
        run: |
          cd src-tauri
          cargo fmt --all -- --check

      - name: Run Clippy
        run: |
          cd src-tauri
          cargo clippy --all-targets --all-features -- -D warnings

      - name: Run Rust tests
        run: |
          cd src-tauri
          cargo test --verbose

      - name: Check Rust build
        run: |
          cd src-tauri
          cargo check --verbose

  build-test:
    name: Build Test
    runs-on: ${{ matrix.os }}
    needs: [frontend-checks, rust-checks]

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: frontend-react/yarn.lock

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: |
          cd frontend-react
          yarn install --frozen-lockfile

      - name: Build frontend
        run: |
          cd frontend-react
          yarn build

      - name: Install Tauri CLI
        run: cargo install tauri-cli

      - name: Build Tauri app
        run: cargo tauri build --verbose
