name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: pulseprint
            artifact_extension: .AppImage
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: pulseprint.exe
            artifact_extension: .msi
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: pulseprint
            artifact_extension: .dmg
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: pulseprint
            artifact_extension: .dmg

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
          cache-dependency-path: frontend-react/yarn.lock

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install frontend dependencies
        run: |
          cd frontend-react
          yarn install --frozen-lockfile

      - name: Build frontend
        run: |
          cd frontend-react
          yarn build

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'PulsePrint Desktop ${{ github.ref_name }}'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: --target ${{ matrix.target }}

      - name: Upload Linux AppImage
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: pulseprint-linux-x86_64
          path: src-tauri/target/release/bundle/appimage/*.AppImage

      - name: Upload Windows MSI
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: pulseprint-windows-x86_64
          path: src-tauri/target/release/bundle/msi/*.msi

      - name: Upload macOS DMG
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: pulseprint-macos-${{ matrix.target }}
          path: src-tauri/target/release/bundle/dmg/*.dmg

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: PulsePrint Desktop ${{ github.ref_name }}
          draft: true
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') }}
          files: |
            ./artifacts/**/*.AppImage
            ./artifacts/**/*.msi
            ./artifacts/**/*.dmg
          body: |
            ## What's Changed
            
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/previous-tag...${{ github.ref_name }}
            
            ## Installation
            
            ### Windows
            Download the `.msi` installer and run it.
            
            ### macOS
            Download the `.dmg` file for your architecture:
            - Intel Macs: `x86_64-apple-darwin`
            - Apple Silicon (M1/M2/M3): `aarch64-apple-darwin`
            
            ### Linux
            Download the `.AppImage` file, make it executable, and run it:
            ```bash
            chmod +x pulseprint-*.AppImage
            ./pulseprint-*.AppImage
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}