name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

env:
  CARGO_TERM_COLOR: always

jobs:
  frontend:
    name: Frontend
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: frontend-react/yarn.lock

      - name: Install dependencies
        run: |
          cd frontend-react
          yarn install --frozen-lockfile

      - name: Lint (ESLint)
        run: |
          cd frontend-react
          yarn eslint src --ext .ts,.tsx --max-warnings 50

      - name: Format check (Prettier)
        run: |
          cd frontend-react
          yarn prettier --check "src/**/*.{ts,tsx,js,jsx,json,css,md}"

      - name: Type check (TypeScript)
        run: |
          cd frontend-react
          yarn tsc --noEmit

      - name: Test with coverage
        run: |
          cd frontend-react
          yarn test --watchAll=false --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./frontend-react/coverage/lcov.info
          flags: frontend
          name: frontend-coverage

      # - name: SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@v2.3.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build
        run: |
          cd frontend-react
          yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend-react/build/
          retention-days: 1

  backend:
    name: Backend
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          # Check if dependencies are already installed, install if needed
          if ! dpkg -l | grep -q libwebkit2gtk-4.1-dev; then
            sudo apt-get update || echo "Could not update package list"
            sudo apt-get install -y libwebkit2gtk-4.1-dev \
              build-essential \
              curl \
              wget \
              file \
              libxdo-dev \
              libssl-dev \
              libayatana-appindicator3-dev \
              librsvg2-dev || echo "Could not install some dependencies"
          else
            echo "System dependencies already installed"
          fi

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Format check (rustfmt)
        run: |
          cd src-tauri
          cargo fmt --all -- --check

      - name: Lint (Clippy)
        run: |
          cd src-tauri
          cargo clippy --all-targets --all-features -- -D warnings

      - name: Test
        run: |
          cd src-tauri
          cargo test --verbose

      - name: Build (release)
        run: |
          cd src-tauri
          cargo build --release

  integration:
    name: Integration & E2E Tests
    runs-on: self-hosted
    needs: [frontend, backend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: frontend-react/yarn.lock

      - name: Download frontend build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend-react/build/

      - name: Install frontend dependencies
        run: |
          cd frontend-react
          yarn install --frozen-lockfile

      - name: Install Playwright browsers
        run: |
          cd frontend-react
          yarn playwright install --with-deps

      - name: Run E2E tests
        run: |
          cd frontend-react
          yarn test:e2e

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: frontend-react/playwright-report/
          retention-days: 30

      - name: Install system dependencies (for Rust integration tests)
        run: |
          # Check if dependencies are already installed, install if needed
          if ! dpkg -l | grep -q libwebkit2gtk-4.1-dev; then
            sudo apt-get update || echo "Could not update package list"
            sudo apt-get install -y libwebkit2gtk-4.1-dev \
              build-essential \
              curl \
              wget \
              file \
              libxdo-dev \
              libssl-dev \
              libayatana-appindicator3-dev \
              librsvg2-dev || echo "Could not install some dependencies"
          else
            echo "System dependencies already installed"
          fi

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run Rust integration tests
        run: |
          cd src-tauri
          cargo test --test integration_tests
          # Note: e2e_integration tests run in the integration job where frontend build is available
