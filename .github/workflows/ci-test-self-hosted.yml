name: Test Self-Hosted Runner

# Only run manually for testing
on:
  workflow_dispatch:

jobs:
  test-runner:
    name: Test Self-Hosted Runner
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: System info (before setup)
        run: |
          echo "=== System Information ==="
          uname -a
          echo ""
          echo "=== Memory Usage ==="
          free -h
          echo ""
          echo "=== CPU Info ==="
          nproc
          echo ""
          echo "=== Disk Usage ==="
          df -h
          echo ""
          echo "=== Current PATH ==="
          echo $PATH
          echo ""
          echo "=== Available tools ==="
          which node || echo "Node.js not found"
          which yarn || echo "Yarn not found"
          which rustc || echo "Rust not found"
          which cargo || echo "Cargo not found"

      - name: Install system dependencies
        run: |
          echo "=== Installing system dependencies ==="
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: frontend-react/yarn.lock

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Verify tools installation
        run: |
          echo "=== Verifying tool versions ==="
          echo "Node.js version:"
          node --version
          echo ""
          echo "NPM version:"
          npm --version
          echo ""
          echo "Yarn version:"
          yarn --version
          echo ""
          echo "Rust version:"
          rustc --version
          echo ""
          echo "Cargo version:"
          cargo --version

      - name: Quick dependency check
        run: |
          echo "=== Testing basic dependencies ==="
          cd frontend-react
          echo "Installing dependencies..."
          yarn install --frozen-lockfile
          echo "✅ Dependencies installed successfully"

      - name: Resource usage after install
        run: |
          echo "=== Resource Usage After Install ==="
          free -h
          echo ""
          echo "=== Top memory consumers ==="
          ps aux --sort=-%mem | head -10

      - name: Quick build test
        run: |
          echo "=== Testing quick build ==="
          cd frontend-react
          echo "Building frontend..."
          yarn build
          echo "✅ Frontend build successful"
          echo ""
          echo "Testing Rust compilation..."
          cd ../src-tauri
          cargo check
          echo "✅ Rust compilation check successful"
